# Palanteer scripting library
# Copyright (C) 2021, Damien Feneyrou <dfeneyrou@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

import io
import os
import sys
import glob
from setuptools import setup, find_packages, Extension


# Constants
isDevMode = False  # Enable to speed up development cycles. Shall be False for final installation
withStackTrace = False

# Deduce some parameters
np = os.path.normpath
r = "${CMAKE_CURRENT_SOURCE_DIR}/../"
src_list = (
    [r + "base/bsString.cpp", r + "base/bsOsLinux.cpp", r + "base/bsOsWindows.cpp"]
    + glob.glob(r + "common/*.cpp")
    + glob.glob(r + "external/zstd/common/*.c")
    + glob.glob(r + "external/zstd/compress/*.c")
    + glob.glob(r + "external/zstd/decompress/*.c")
    + glob.glob("${CMAKE_CURRENT_SOURCE_DIR}/palanteer_scripting/_cextension/*.cpp")
)
extra_link_args = []
extra_compilation_flags = [
    "-DUSE_PL=1",
    "-DPL_EXPORT=1",
    "-DBS_NO_GRAPHIC",
    "-DPL_NOCONTROL=1",
    "-DPL_NOEVENT=1",
    "-std=c++14",
]

for folder in [
    "../c++",
    "base",
    "common",
    "external/zstd",
    "external/zstd/common",
    "external/zstd/compress",
    "external/zstd/decompress",
]:
    extra_compilation_flags.extend(["-I", np(r + folder)])


if isDevMode:
    # Developement mode (fast build & debug code)
    extra_compilation_flags.append("-DPL_NO_COMPRESSION=1")
    if sys.platform == "win32":
        extra_compilation_flags.append("/Zi")
        extra_link_args.append("/DEBUG")
    else:
        extra_compilation_flags.append("-O0")
else:
    extra_compilation_flags.append(
        "-DPL_GROUP_BSVEC=0"
    )  # Force deactivation of array bound check

if withStackTrace:
    extra_compilation_flags.append("-DPL_IMPL_STACKTRACE=1")
    if sys.platform == "linux":
        extra_link_args.extend(["-ldw", "-lunwind"])

if sys.platform == "win32":
    extra_compilation_flags.append("/DUNICODE")
    extra_compilation_flags.append("/wd4996")  # Disable the "This function or variable may be unsafe", pushing for not well supported extensions

# Normalize all source path (required for Windows)
src_list = [np(s) for s in src_list]

classifiers_list = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: POSIX :: Linux",
    "Topic :: Software Development",
    "Topic :: Software Development :: Testing",
]

# Read the Palanteer version from the C++ header library
with io.open(
    "${CMAKE_CURRENT_SOURCE_DIR}/../../c++/palanteer.h", encoding="UTF-8"
) as versionFile:
    PALANTEER_VERSION = (
        [l for l in versionFile.read().split("\n") if "PALANTEER_VERSION " in l][0]
        .split()[2]
        .replace('"', "")
    )

# Read the content of the readme file
with io.open("${CMAKE_CURRENT_SOURCE_DIR}/README.md", encoding="UTF-8") as readmeFile:
    long_description = readmeFile.read()


# Build call
setup(
    name="palanteer_scripting",
    version=PALANTEER_VERSION,
    author="Damien Feneyrou",
    author_email="dfeneyrou@gmail.com",
    license="AGPLv3+",
    description="Palanteer scripting module",
    long_description=long_description,
    long_description_content_type="text/markdown",
    classifiers=classifiers_list,
    python_requires=">=3.7",
    url="https://github.com/dfeneyrou/palanteer",
    packages=find_packages(np("${CMAKE_CURRENT_SOURCE_DIR}")),
    package_dir={"": np("${CMAKE_CURRENT_SOURCE_DIR}")},
    ext_modules=[
        Extension(
            "palanteer_scripting._cextension",
            sources=src_list,
            extra_compile_args=extra_compilation_flags,
            extra_link_args=extra_link_args,
        ),
    ],
    py_modules=["palanteer_scripting._scripting"],
    zip_safe=False,
)
